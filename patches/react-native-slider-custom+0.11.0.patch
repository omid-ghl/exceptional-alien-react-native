diff --git a/node_modules/react-native-slider-custom/src/Slider.js b/node_modules/react-native-slider-custom/src/Slider.js
index 4ac0e23..cb4e165 100644
--- a/node_modules/react-native-slider-custom/src/Slider.js
+++ b/node_modules/react-native-slider-custom/src/Slider.js
@@ -10,8 +10,7 @@ import {
   StyleSheet,
   PanResponder,
   View,
-  Easing,
-  ViewPropTypes
+  Easing
 } from "react-native";
 
 import PropTypes from 'prop-types';
@@ -50,135 +49,6 @@ var DEFAULT_ANIMATION_CONFIGS = {
 };
 
 export default class Slider extends PureComponent {
-  static propTypes = {
-    /**
-     * Initial value of the slider. The value should be between minimumValue
-     * and maximumValue, which default to 0 and 1 respectively.
-     * Default value is 0.
-     *
-     * *This is not a controlled component*, e.g. if you don't update
-     * the value, the component won't be reset to its inital value.
-     */
-    value: PropTypes.number,
-
-    /**
-     * If true the user won't be able to move the slider.
-     * Default value is false.
-     */
-    disabled: PropTypes.bool,
-
-    /**
-     * Initial minimum value of the slider. Default value is 0.
-     */
-    minimumValue: PropTypes.number,
-
-    /**
-     * Initial maximum value of the slider. Default value is 1.
-     */
-    maximumValue: PropTypes.number,
-
-    /**
-     * Step value of the slider. The value should be between 0 and
-     * (maximumValue - minimumValue). Default value is 0.
-     */
-    step: PropTypes.number,
-
-    /**
-     * The color used for the track to the left of the button. Overrides the
-     * default blue gradient image.
-     */
-    minimumTrackTintColor: PropTypes.string,
-
-    /**
-     * Custom component used for the track to the left of the button.
-     */
-    customMinimumTrack: PropTypes.any,
-
-    /**
-     * The color used for the track to the right of the button. Overrides the
-     * default blue gradient image.
-     */
-    maximumTrackTintColor: PropTypes.string,
-    
-    /**
-     * Custom component used for the track to the right of the button.
-     */
-    customMaximumTrack: PropTypes.any,
-
-    /**
-     * The color used for the thumb.
-     */
-    thumbTintColor: PropTypes.string,
-
-    /**
-     * The size of the touch area that allows moving the thumb.
-     * The touch area has the same center has the visible thumb.
-     * This allows to have a visually small thumb while still allowing the user
-     * to move it easily.
-     * The default is {width: 40, height: 40}.
-     */
-    thumbTouchSize: PropTypes.shape(
-      {width: PropTypes.number, height: PropTypes.number}
-    ),
-
-    /**
-     * Callback continuously called while the user is dragging the slider.
-     */
-    onValueChange: PropTypes.func,
-
-    /**
-     * Callback called when the user starts changing the value (e.g. when
-     * the slider is pressed).
-     */
-    onSlidingStart: PropTypes.func,
-
-    /**
-     * Callback called when the user finishes changing the value (e.g. when
-     * the slider is released).
-     */
-    onSlidingComplete: PropTypes.func,
-
-    /**
-     * The style applied to the slider container.
-     */
-    style: ViewPropTypes.style,
-
-    /**
-     * The style applied to the track.
-     */
-    trackStyle: ViewPropTypes.style,
-
-    /**
-     * The style applied to the thumb.
-     */
-    thumbStyle: ViewPropTypes.style,
-
-    /**
-     * Sets an custom component for the thumb.
-     */
-    customThumb: PropTypes.any,
-
-    /**
-     * Set this to true to visually see the thumb touch rect in green.
-     */
-    debugTouchArea: PropTypes.bool,
-
-    /**
-     * Set to true to animate values with default 'timing' animation type
-     */
-    animateTransitions : PropTypes.bool,
-
-    /**
-     * Custom Animation type. 'spring' or 'timing'.
-     */
-    animationType : PropTypes.oneOf(['spring', 'timing']),
-
-    /**
-     * Used to configure the animation parameters.  These are the same parameters in the Animated library.
-     */
-    animationConfig : PropTypes.object,
-  };
-
   static defaultProps = {
     value: 0,
     minimumValue: 0,
